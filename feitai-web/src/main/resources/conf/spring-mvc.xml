<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
 	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">
    
    <mvc:annotation-driven />  
	<!-- 扫描controller（controller层注入） -->
	<context:component-scan base-package="com.feitai" >
	    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	
	<!-- 对模型视图添加前后缀 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />


	<bean id="handlerExceptionResolver" class="com.feitai.common.core.CoreHandlerExceptionResolver">
	</bean>
	
    <mvc:annotation-driven>   
        <mvc:message-converters register-defaults="true">  
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">  
		            <list>  
		                <value>text/html;charset=UTF-8</value>  
		                <value>application/json;charset=UTF-8</value>  
		            </list>  
        		</property> 
            </bean>  
        </mvc:message-converters>  
    </mvc:annotation-driven>  
    
    <mvc:interceptors>    
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
	    <mvc:interceptor>    
	        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
	        <mvc:mapping path="/**.html" /> 
	        <bean class="com.feitai.common.core.CoreHandlerInterceptorAdapter"></bean>
	    </mvc:interceptor>  
</mvc:interceptors>  
</beans>